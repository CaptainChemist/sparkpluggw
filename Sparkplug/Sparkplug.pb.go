// Code generated by protoc-gen-go. DO NOT EDIT.
// source: SparkPlug.proto

package Sparkplug

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Sparkplug struct {
	Timestamp            float64            `protobuf:"fixed64,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Metrics              *Sparkplug_METRICS `protobuf:"bytes,2,opt,name=metrics,proto3" json:"metrics,omitempty"`
	Seq                  float64            `protobuf:"fixed64,3,opt,name=seq,proto3" json:"seq,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Sparkplug) Reset()         { *m = Sparkplug{} }
func (m *Sparkplug) String() string { return proto.CompactTextString(m) }
func (*Sparkplug) ProtoMessage()    {}
func (*Sparkplug) Descriptor() ([]byte, []int) {
	return fileDescriptor_d31831d0a4832034, []int{0}
}

func (m *Sparkplug) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sparkplug.Unmarshal(m, b)
}
func (m *Sparkplug) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sparkplug.Marshal(b, m, deterministic)
}
func (m *Sparkplug) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sparkplug.Merge(m, src)
}
func (m *Sparkplug) XXX_Size() int {
	return xxx_messageInfo_Sparkplug.Size(m)
}
func (m *Sparkplug) XXX_DiscardUnknown() {
	xxx_messageInfo_Sparkplug.DiscardUnknown(m)
}

var xxx_messageInfo_Sparkplug proto.InternalMessageInfo

func (m *Sparkplug) GetTimestamp() float64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Sparkplug) GetMetrics() *Sparkplug_METRICS {
	if m != nil {
		return m.Metrics
	}
	return nil
}

func (m *Sparkplug) GetSeq() float64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

type Sparkplug_METRICS struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Timestamp            float64  `protobuf:"fixed64,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	DataType             string   `protobuf:"bytes,3,opt,name=dataType,proto3" json:"dataType,omitempty"`
	Value                float64  `protobuf:"fixed64,4,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Sparkplug_METRICS) Reset()         { *m = Sparkplug_METRICS{} }
func (m *Sparkplug_METRICS) String() string { return proto.CompactTextString(m) }
func (*Sparkplug_METRICS) ProtoMessage()    {}
func (*Sparkplug_METRICS) Descriptor() ([]byte, []int) {
	return fileDescriptor_d31831d0a4832034, []int{0, 0}
}

func (m *Sparkplug_METRICS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sparkplug_METRICS.Unmarshal(m, b)
}
func (m *Sparkplug_METRICS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sparkplug_METRICS.Marshal(b, m, deterministic)
}
func (m *Sparkplug_METRICS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sparkplug_METRICS.Merge(m, src)
}
func (m *Sparkplug_METRICS) XXX_Size() int {
	return xxx_messageInfo_Sparkplug_METRICS.Size(m)
}
func (m *Sparkplug_METRICS) XXX_DiscardUnknown() {
	xxx_messageInfo_Sparkplug_METRICS.DiscardUnknown(m)
}

var xxx_messageInfo_Sparkplug_METRICS proto.InternalMessageInfo

func (m *Sparkplug_METRICS) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Sparkplug_METRICS) GetTimestamp() float64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Sparkplug_METRICS) GetDataType() string {
	if m != nil {
		return m.DataType
	}
	return ""
}

func (m *Sparkplug_METRICS) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func init() {
	proto.RegisterType((*Sparkplug)(nil), "Sparkplug.Sparkplug")
	proto.RegisterType((*Sparkplug_METRICS)(nil), "Sparkplug.Sparkplug.METRICS")
}

func init() { proto.RegisterFile("SparkPlug.proto", fileDescriptor_d31831d0a4832034) }

var fileDescriptor_d31831d0a4832034 = []byte{
	// 186 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x0f, 0x2e, 0x48, 0x2c,
	0xca, 0x0e, 0xc8, 0x29, 0x4d, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x04, 0x0b, 0x14,
	0xe4, 0x94, 0xa6, 0x2b, 0x3d, 0x62, 0xe4, 0x42, 0xf0, 0x84, 0x64, 0xb8, 0x38, 0x4b, 0x32, 0x73,
	0x53, 0x8b, 0x4b, 0x12, 0x73, 0x0b, 0x24, 0x18, 0x15, 0x18, 0x35, 0x18, 0x83, 0x10, 0x02, 0x42,
	0x66, 0x5c, 0xec, 0xb9, 0xa9, 0x25, 0x45, 0x99, 0xc9, 0xc5, 0x12, 0x4c, 0x0a, 0x8c, 0x1a, 0xdc,
	0x46, 0x32, 0x7a, 0x70, 0xad, 0x48, 0x2c, 0x5f, 0xd7, 0x90, 0x20, 0x4f, 0xe7, 0xe0, 0x20, 0x98,
	0x62, 0x21, 0x01, 0x2e, 0xe6, 0xe2, 0xd4, 0x42, 0x09, 0x66, 0xb0, 0x79, 0x20, 0xa6, 0x54, 0x2e,
	0x17, 0x3b, 0x54, 0x95, 0x90, 0x10, 0x17, 0x4b, 0x5e, 0x62, 0x6e, 0x2a, 0xd8, 0x36, 0xce, 0x20,
	0x30, 0x1b, 0xd5, 0x19, 0x4c, 0xe8, 0xce, 0x90, 0xe2, 0xe2, 0x48, 0x49, 0x2c, 0x49, 0x0c, 0xa9,
	0x2c, 0x48, 0x05, 0x9b, 0xc9, 0x19, 0x04, 0xe7, 0x0b, 0x89, 0x70, 0xb1, 0x96, 0x25, 0xe6, 0x94,
	0xa6, 0x4a, 0xb0, 0x80, 0x75, 0x41, 0x38, 0x49, 0x6c, 0x60, 0x6f, 0x1b, 0x03, 0x02, 0x00, 0x00,
	0xff, 0xff, 0x9d, 0x3a, 0xc8, 0x4c, 0x09, 0x01, 0x00, 0x00,
}
